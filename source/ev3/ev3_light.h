
/*  ev3_light.h was generated by yupp 1.1c3
    out of ev3_light.yu-h 
 *//**
 *  \file  ev3_light.h (ev3_light.yu-h)
 *  \brief  EV3 Lights (GREEN and RED LEDs at once).
 *  \author  Vitaly Kravtsov (in4lio@gmail.com)
 *  \copyright  See the LICENSE file.
 */

#ifndef EV3_LIGHT_H
#define EV3_LIGHT_H

#ifdef  EV3_LIGHT_IMPLEMENT
#define EV3_LIGHT_VAR( decl ) \
	decl
#define EV3_LIGHT_VAR_INIT( decl, ... ) \
	decl = __VA_ARGS__

#define EV3_LIGHT_INL

#else  /* EV3_LIGHT_IMPLEMENT */
#define EV3_LIGHT_VAR( decl ) \
	extern decl
#define EV3_LIGHT_VAR_INIT( decl, ... ) \
	extern decl

#if __GNUC__ && !__GNUC_STDC_INLINE__
#define EV3_LIGHT_INL \
	extern inline
#else
#define EV3_LIGHT_INL \
	inline
#endif

#endif /* EV3_LIGHT_IMPLEMENT */

#include <stddef.h>
#include <stdint.h>
#include <stdbool.h>

/**
 *  \defgroup ev3_light Lights
 *  \brief Access to EV3 GREEN and RED LEDs at once.
 *  \{
 */

#ifdef __cplusplus
extern "C" {
#endif

/**
 *  \brief Identifiers of light locations.
 */
enum {
	LIT_LEFT,
	LIT_RIGHT,

	LIT__LOC__
};

/**
 *  \brief Identifiers of light colors.
 */
enum {
	LIT_OFF,
	LIT_GREEN,
	LIT_RED,
	LIT_AMBER,

	LIT__COL__
};

/**
 *  \brief Light colors.
 */
EV3_LIGHT_VAR_INIT( const char *const LIT_COLOR[], { "OFF", "GREEN", "RED", "AMBER", STR_unknown_ } );

/**
 *  \brief Get the light color name.
 *  \param col Color.
 *  \return Color name.
 */
extern const char *light_color( uint8_t col );

/**
 *  \brief Set the light color.
 *  \param loc Location.
 *  \param col Color.
 */
extern void set_light( uint8_t loc, uint8_t col );

/**
 *  \brief Get the light color.
 *  \param loc Location.
 *  \return Color.
 */
extern uint8_t get_light( uint8_t loc );

/**
 *  \brief Set the light trigger.
 *  \param loc Location.
 *  \param col Color.
 *  \param trigger Index of trigger.
 */
extern void set_light_trigger( uint8_t loc, uint8_t col, uint8_t trigger );

/**
 *  \brief Get the light trigger.
 *  \param loc Location.
 *  \param col Color.
 *  \return Index of trigger or TRIGGER__COUNT_ - error has occurred.
 */
extern uint8_t get_light_trigger( uint8_t loc, uint8_t col );

/**
 *  \brief Set the light blink.
 *  \param loc Location.
 *  \param col Color.
 *  \param delay_on Time of "on" state in ms.
 *  \param delay_off Time of "off" state in ms.
 */
extern void set_light_blink( uint8_t loc, uint8_t col, int delay_on, int delay_off );

/**
 *  \brief Check the light is blinking.
 *  \param loc Location.
 *  \param col Color.
 *  \return Flag - the light is blinking.
 */
extern bool get_light_blink( uint8_t loc, uint8_t col );

#ifdef __cplusplus
}
#endif

/** \} */

#undef EV3_LIGHT_VAR
#undef EV3_LIGHT_VAR_INIT
#undef EV3_LIGHT_INL
#endif

